===============================================================================
									Costea Mihai 
										322CB
===============================================================================
									  POO Tema3
===============================================================================
===============================================================================

Mai intai se citesc datele de intrare si se creaza labirintul dupa care in 
functie de task se alege strategia pe care se merge. Daca este task-ul 1, eroul,
un obiect, este pus in interiorul celulei de start, si dupa algoritmul prezentat
in cerinta inceaca sa gaseasca iesirea. Algoritmul a fost implementat 
folosindu-ma de logica numerelor complexe si anume ca un numar imultit cu i
face de fapt o rotatie de 90 de grade in plan , fiind vorba de un obiect 2D
precum un labirint, totul a fost ok. A trebuit totusi sa inversez stanga cu
dreapta deoarece cand crestea ordonata ar fi trebuit sa scad din indecele de
linie si asa ideea de mers in jos ar fi devenit mers in sus si invers. Dar
rotind planul complex cu 180 de grade (stanga devine dreapta si invers),
aceasta problema s-a rezolvat. In continuare eroul apeleaza o metoda care
spune care sunt celulele adiacente celulei in care acesta se afla(viziunea
eroului). Si dupa acesta le compara folosindu-se de un TreeSet cu un compartor.
Comparatorul resprecta ordinea relativa la orientarea eroului, si alege mereu
celula de exit daca este posibil. Dupa ce au fost sortate celulele in functie
de prioritate, eroul o alege pe prima si dupa avanseaza. Isi noteaza de cate 
ori a fost in celula precedenta. Dupa ce a ajuns la iesire se afiseaza in fisier
drumul pe care acesta l-a urmat.

===============================================================================
===============================================================================

Task-ul 2 implementeaza un algoritm in care eroul merge pe toate path-urile 
simultan in paralel, si se opreste cand a gasit un drum pe unul din path-uri.
Dupa care isi noteaza drumul. Am aflat ulterior ca acest algoritm se numeste
algoritmul lui Lee si, ca coada eu am folosit o lista simplu inlantuia din
caua proprietatii ei ca se sterge un element de la inceput sau de la sfarsit
in O(1), la fel si pentru adaugare.

===============================================================================
===============================================================================

Am explicat in acest README in mare cum functioneaza programul, detalii mai 
legate de implementare le contine javadoc-ul aferent atasat temei, si
comentariile din cod.

===============================================================================
=============================================================================